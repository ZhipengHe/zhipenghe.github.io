<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://zhipenghe.me/feed.xml" rel="self" type="application/atom+xml"/><link href="https://zhipenghe.me/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-06-10T15:51:25+00:00</updated><id>https://zhipenghe.me/feed.xml</id><title type="html">Zhipeng ‚ÄúZippo‚Äù He - ‰ΩïÂøóÈπè</title><subtitle>Crafting ideas, solving problems, and exploring passions‚Äîwelcome to my world. </subtitle><entry><title type="html">Docker API Exposure via Tailscale VPN - Linux Setup Guide</title><link href="https://zhipenghe.me/blog/2025/Docker-API-Exposure-Linux/" rel="alternate" type="text/html" title="Docker API Exposure via Tailscale VPN - Linux Setup Guide"/><published>2025-06-07T12:37:00+00:00</published><updated>2025-06-07T12:37:00+00:00</updated><id>https://zhipenghe.me/blog/2025/Docker-API-Exposure-Linux</id><content type="html" xml:base="https://zhipenghe.me/blog/2025/Docker-API-Exposure-Linux/"><![CDATA[<h2 id="overview">Overview</h2> <p>This guide shows how to expose Docker‚Äôs API (port 2376) to your Tailscale VPN network on Linux systems. It‚Äôs a simple guide for those who want to use Docker remotely or access the status of Docker Containers from another device.</p> <blockquote class="block-warning"> <h5 id="warning">WARNING</h5> <p>We‚Äôre using port 2376 but <strong>without SSL/TLS encryption</strong>. Thus, you need to use a VPN tunnel to provide encryption and access control.</p> </blockquote> <h2 id="prerequisites">Prerequisites</h2> <ul> <li>Docker installed and running on Linux</li> <li>Tailscale VPN installed and connected</li> <li>sudo/root access to the system</li> </ul> <h2 id="step-1-find-your-tailscale-ip-address">Step 1: Find Your Tailscale IP Address</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Get your Tailscale IP</span>
tailscale ip <span class="nt">-4</span>
</code></pre></div></div> <p>Note the IP address (e.g., <code class="language-plaintext highlighter-rouge">100.xxx.xxx.xxx</code>) - you‚Äôll need this later.</p> <h2 id="step-2-configure-docker-daemon">Step 2: Configure Docker Daemon</h2> <h3 id="using-systemd-override-recommended">Using systemd Override (Recommended)</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Create systemd override</span>
<span class="nb">sudo </span>systemctl edit docker.service
</code></pre></div></div> <p>Add this configuration (replace <code class="language-plaintext highlighter-rouge">100.xxx.xxx.xxx</code> with your actual Tailscale IP):</p> <div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">[Service]</span>
<span class="py">ExecStart</span><span class="p">=</span>
<span class="py">ExecStart</span><span class="p">=</span><span class="s">/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://100.xxx.xxx.xxx:2376 --containerd=/run/containerd/containerd.sock</span>
</code></pre></div></div> <h2 id="step-3-apply-configuration">Step 3: Apply Configuration</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Reload systemd and restart Docker</span>
<span class="nb">sudo </span>systemctl daemon-reload
<span class="nb">sudo </span>systemctl restart docker

<span class="c"># Verify Docker is running</span>
<span class="nb">sudo </span>systemctl status docker
</code></pre></div></div> <h2 id="step-4-configure-firewall">Step 4: Configure Firewall</h2> <h3 id="for-ufw-ubuntudebian">For UFW (Ubuntu/Debian):</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Install UFW if not present</span>
<span class="nb">sudo </span>apt <span class="nb">install </span>ufw <span class="nt">-y</span>

<span class="c"># Allow SSH (important - don't lock yourself out!)</span>
<span class="nb">sudo </span>ufw allow ssh

<span class="c"># Allow existing services</span>
<span class="nb">sudo </span>ufw allow 80
<span class="nb">sudo </span>ufw allow 443

<span class="c"># Allow Docker API from Tailscale network</span>
<span class="nb">sudo </span>ufw allow from 100.64.0.0/10 to any port 2376

<span class="c"># Enable UFW</span>
<span class="nb">sudo </span>ufw <span class="nb">enable</span>

<span class="c"># Check status</span>
<span class="nb">sudo </span>ufw status numbered
</code></pre></div></div> <h3 id="for-iptables-direct-method">For iptables (Direct method):</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Add rule to allow Docker API from Tailscale network</span>
<span class="nb">sudo </span>iptables <span class="nt">-I</span> INPUT <span class="nt">-p</span> tcp <span class="nt">--dport</span> 2376 <span class="nt">-s</span> 100.64.0.0/10 <span class="nt">-j</span> ACCEPT

<span class="c"># Save rules (method varies by distribution)</span>
<span class="c"># Ubuntu/Debian:</span>
<span class="nb">sudo </span>iptables-save <span class="o">&gt;</span> /etc/iptables/rules.v4

<span class="c"># CentOS/RHEL:</span>
<span class="nb">sudo </span>service iptables save
</code></pre></div></div> <h2 id="step-5-verify-setup">Step 5: Verify Setup</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Check if Docker is listening on the correct port</span>
<span class="nb">sudo </span>ss <span class="nt">-tlnp</span> | <span class="nb">grep</span> :2376

<span class="c"># Check your Tailscale IP</span>
tailscale ip <span class="nt">-4</span>

<span class="c"># Test local connection</span>
curl http://<span class="si">$(</span>tailscale ip <span class="nt">-4</span><span class="si">)</span>:2376/containers/json
</code></pre></div></div> <p>Expected output should show JSON with container information.</p> <h2 id="step-6-test-from-remote-device">Step 6: Test from Remote Device</h2> <p>From another device on your Tailscale network:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Test Docker connection (replace with your Tailscale IP)</span>
curl http://100.xxx.xxx.xxx:2376/containers/json

<span class="c"># Or test with Docker client</span>
docker <span class="nt">-H</span> tcp://100.xxx.xxx.xxx:2376 ps
</code></pre></div></div> <h2 id="security-notes">Security Notes</h2> <ul> <li>‚ö†Ô∏è <strong>Warning</strong>: This exposes Docker daemon without TLS encryption</li> <li>‚úÖ <strong>Safe</strong>: Tailscale provides encrypted VPN tunnel</li> <li>üîí <strong>Access</strong>: Only devices on your Tailscale network can connect</li> <li>üí° <strong>Firewall</strong>: Uses Tailscale‚Äôs CGNAT range (100.64.0.0/10) for access control</li> <li>üõ°Ô∏è <strong>Best Practice</strong>: Consider using TLS certificates for production environments</li> </ul> <h2 id="usage-examples">Usage Examples</h2> <p>Once configured, you can use Docker remotely:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set environment variable for easier use (replace with your Tailscale IP)</span>
<span class="nb">export </span><span class="nv">DOCKER_HOST</span><span class="o">=</span>tcp://100.xxx.xxx.xxx:2376

<span class="c"># Now use Docker commands normally</span>
docker ps
docker images
docker run hello-world

<span class="c"># Use with docker-compose remotely</span>
docker-compose ps
docker-compose logs
</code></pre></div></div> <h2 id="troubleshooting">Troubleshooting</h2> <h3 id="docker-not-listening-on-port-2376">Docker not listening on port 2376:</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Check Docker process</span>
ps aux | <span class="nb">grep </span>dockerd

<span class="c"># Check systemd service</span>
<span class="nb">sudo </span>systemctl <span class="nb">cat </span>docker.service | <span class="nb">grep </span>ExecStart

<span class="c"># View Docker logs</span>
<span class="nb">sudo </span>journalctl <span class="nt">-u</span> docker.service <span class="nt">-f</span>
</code></pre></div></div> <h3 id="connection-refused-from-remote">Connection refused from remote:</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Check firewall rules</span>
<span class="nb">sudo </span>ufw status
<span class="c"># or</span>
<span class="nb">sudo </span>iptables <span class="nt">-L</span> <span class="nt">-n</span> | <span class="nb">grep </span>2376

<span class="c"># Test local connection first</span>
curl http://localhost:2376/containers/json
</code></pre></div></div> <h3 id="tailscale-connectivity-issues">Tailscale connectivity issues:</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Check Tailscale status</span>
tailscale status

<span class="c"># Restart Tailscale</span>
<span class="nb">sudo </span>systemctl restart tailscaled

<span class="c"># Re-authenticate if needed</span>
<span class="nb">sudo </span>tailscale up
</code></pre></div></div> <h3 id="docker-service-wont-start">Docker service won‚Äôt start:</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Check for configuration conflicts</span>
<span class="nb">sudo </span>journalctl <span class="nt">-u</span> docker.service <span class="nt">--no-pager</span> <span class="nt">-l</span>

<span class="c"># Temporarily remove custom config</span>
<span class="nb">sudo mv</span> /etc/docker/daemon.json /etc/docker/daemon.json.backup
<span class="nb">sudo </span>systemctl restart docker
</code></pre></div></div>]]></content><author><name></name></author><category term="Self-hosted"/><category term="Docker,"/><category term="Tailscale,"/><category term="Linux"/><summary type="html"><![CDATA[This guide shows how to expose Docker's API (port 2376) to your Tailscale VPN network on Linux systems.]]></summary></entry></feed>